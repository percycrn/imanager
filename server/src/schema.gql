#########################################################
#                    type definition
#########################################################
type User {
  uid: String!
  name: String!
  tags: [String]!
  email: String
  address: String
  phoneNumber: String!
}

type Activity {
  aid: ID!
  name: String!
  address: String
  startTime: String
  endTime: String
  now: Int # 已报人数
  max: Int # 最大人数
  min: Int # 最低人数
  summary: String # 教师写，管理员看？？
  tag: String! # 标签
  signUpTime: String
  state: ActivityState
}

type Applicaton {
  uid: ID
  tag: String # tag name
  applyTime: String
  state: ApplicatonState
}

type ActivityRecord{
    uid: String!
    aid: String!
    tid: String! # 用户以什么身份报名
    signInTime: String! # 报名时间
    signUpTime: String # 签到时间
}

#登陆失败 error是错误信息，其余属性均为空。
#登陆成功 error为空，token用来维持会话，
#user是用户基本信息
#登陆成功，默认路由是/activity/public,
#publicActivites,用来渲染页面
type LoginResponse {
  token: String
  error: Error
  user: User
  publicActivites: [Activity]
}

#错误代码为三位数，具体待定
#业务错误以9开头
type Error {
  code: Int!
  message: String!
}

enum ActivityState {
  REGISTERING
  AFTER_REG
  HOLDING
  FINISHED
}

enum ApplicatonState {
  PENDDING
  PASS
  DENY
}

#########################################################
#                    input
#########################################################
input SignData {
  phoneNumber: String
  password: String
}

input UserInfo {
  uid: String!
  email: String
  address: String
}

input ApplicationInfo{
  uid: ID!
  tag: String!
  applyTime: String!
  state: String!
}

input ActivityInfo{
  uid: ID!
  aid: ID!
  activity: Activity!
}

#########################################################
#                    entrance
#########################################################
type Query {
  # 管理员
  getUsers: [User] # 返回所有用户对象
  # 用户
  unjoinedActivity(): [Activity] # 没参加可以报名的
  joinedActivity(): [Activity] # 已报名但未开始的
  finishedActivity(uid: ID!): [Activity]
  # 申请
  getApplications(uid: ID!): [Application] # 获得所有待审核的申请/没有参数返回所有
}

type Mutation {
  # 注册登陆登出
  signIn(data: SignData!): LoginResponse # 登陆
  signUp(data: SignData!): LoginResponse # 注册
  logOut: null # 登出
  # 管理员
  createActivity(data: ActivityInfo): Activity
  deleteActivity(data: ActivityInfo): Activity
  updateActivity(data: ActivityInfo): Activity
  # 用户相关
  updateUserInfo(user: UserInfo!): User
  createActivityUser(data: ActivityInfo): Activity # 报名
  deleteActivityUser(data: ActivityInfo): Activity
  updateActivityUser(data: ActivityInfo): Activity # 签到
  # 申请相关
  createApp(data: ApplicationInfo!): Application
  deleteApp(data: ApplicationInfo!): Application # 返回删除的App
  updateApp(data: ApplicationInfo!): Application # 改变申请状态
}